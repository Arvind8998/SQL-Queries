//Limit 1 limits the amount of data outputted by the select query
//  Group by is placed before order by to group togethjer the data generated by the query

Q1.
https://www.hackerrank.com/challenges/revising-the-select-query/problem?isFullScreen=true

SELECT * FROM CITY WHERE POPULATION >=100000 AND COUNTRYCODE = "USA";


Q2.
https://www.hackerrank.com/challenges/revising-the-select-query-2/problem?isFullScreen=true

SELECT NAME FROM CITY WHERE POPULATION > 120000 AND COUNTRYCODE = "USA";

Q3.
https://www.hackerrank.com/challenges/select-all-sql/problem?isFullScreen=true


Q4. 
https://www.hackerrank.com/challenges/select-by-id/problem?isFullScreen=true
SELECT * FROM CITY WHERE ID =1661;

Q5.
https://www.hackerrank.com/challenges/japanese-cities-attributes/problem?isFullScreen=true
SELECT * FROM CITY WHERE COUNTRYCODE  = "JPN";

Q6.
https://www.hackerrank.com/challenges/japanese-cities-name?isFullScreen=true
SELECT NAME FROM CITY WHERE COUNTRYCODE = "JPN";

Q7.
https://www.hackerrank.com/challenges/weather-observation-station-1/problem?isFullScreen=true
SELECT CITY, STATE FROM STATION;

Q8.
https://www.hackerrank.com/challenges/weather-observation-station-3/problem?isFullScreen=true
SELECT DISTINCT CITY FROM STATION WHERE ID%2=0; 

Q9.
https://www.hackerrank.com/challenges/weather-observation-station-4/problem?isFullScreen=true
SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION;

Q10.
https://www.hackerrank.com/challenges/weather-observation-station-5/problem?isFullScreen=true

SELECT CITY, LENGTH(CITY) FROM STATION 
WHERE CITY = (
    SELECT CITY FROM STATION WHERE LENGTH(CITY) = (SELECT MIN(LENGTH(CITY)) FROM STATION ) ORDER BY CITY ASC LIMIT 1
)
OR CITY = ( SELECT  CITY FROM STATION WHERE LENGTH(CITY) = (SELECT MAX(LENGTH(CITY)) FROM STATION ) ORDER BY CITY ASC LIMIT 1 );


Q11.
https://www.hackerrank.com/challenges/weather-observation-station-6/problem?isFullScreen=true

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR(CITY, 1, 1)) IN('a', 'e', 'i', 'o', 'u'); 

Q12.
https://www.hackerrank.com/challenges/weather-observation-station-7/problem?isFullScreen=true

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR( CITY, LENGTH(CITY), 1)) IN  ( 'a', 'e', 'i', 'o', 'u');

Q13.
https://www.hackerrank.com/challenges/weather-observation-station-8/problem?isFullScreen=true

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR( CITY, LENGTH(CITY), 1)) IN  ( 'a', 'e', 'i', 'o', 'u') AND LOWER(SUBSTR(CITY, 1, 1)) IN('a', 'e', 'i', 'o', 'u');

Q14.
https://www.hackerrank.com/challenges/weather-observation-station-9/problem?isFullScreen=true

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR(CITY, 1, 1)) NOT IN ('a', 'e', 'i', 'o', 'u') ;

Q15.
https://www.hackerrank.com/challenges/weather-observation-station-10/problem?isFullScreen=true

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTRING(CITY, LENGTH(CITY), 1)) NOT IN ('a', 'e', 'i', 'o', 'u');

Q16.
https://www.hackerrank.com/challenges/weather-observation-station-11/problem?isFullScreen=true

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTRING(CITY, 1, 1)) NOT IN ('a', 'e', 'i', 'o', 'u') OR LOWER(SUBSTRING(CITY, LENGTH(CITY), 1)) NOT IN ('a', 'e', 'i', 'o', 'u');

Q17.
https://www.hackerrank.com/challenges/weather-observation-station-12/problem?isFullScreen=true

SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTRING(CITY, 1, 1)) NOT IN ('a', 'e', 'i', 'o', 'u') AND LOWER(SUBSTRING(CITY, LENGTH(CITY), 1) NOT IN ('a', 'e', 'i', 'o', 'u')) ;

Q18.
https://www.hackerrank.com/challenges/more-than-75-marks/problem?isFullScreen=true

SELECT NAME FROM STUDENTS WHERE MARKS > 75 ORDER BY SUBSTRING(NAME, LENGTH(NAME)-2, 3), ID ASC ; 

Q19.
https://www.hackerrank.com/challenges/name-of-employees/problem?isFullScreen=true

SELECT NAME FROM EMPLOYEE ORDER BY NAME ASC;

Q20.
https://www.hackerrank.com/challenges/salary-of-employees/problem?isFullScreen=true

SELECT NAME FROM EMPLOYEE WHERE SALARY > 2000 AND MONTHS < 10 ORDER BY EMPLOYEE_ID ASC;


Q21.
https://www.hackerrank.com/challenges/what-type-of-triangle/problem?isFullScreen=true

    SELECT
        CASE
            WHEN A+B <=C OR B+C <=A  OR A+C<= B THEN 'Not A Triangle'
            WHEN A = B AND B=C AND A = C THEN 'Equilateral'
            WHEN A = B OR B=C OR A = C THEN 'Isosceles'
            ELSE 'Scalene'
        END
    FROM TRIANGLES; 


Q22. 
https://www.hackerrank.com/challenges/occupations/problem?isFullScreen=true

SELECT NAME, OCCUPATION FROM OCCUPATIONS GROUP BY OCCUPATION ORDER BY NAME ASC;


